"""create_core_models

Revision ID: ed9f7e9b1283
Revises: 07c71f4389b6
Create Date: 2023-02-11 21:10:58.509955

"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "ed9f7e9b1283"
down_revision = "07c71f4389b6"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "department",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("sigaa_id", sa.Integer(), nullable=False),
        sa.Column("acronym", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_department_id"), "department", ["id"], unique=False)
    op.create_index(
        op.f("ix_department_sigaa_id"), "department", ["sigaa_id"], unique=False
    )
    op.create_table(
        "component",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("sigaa_id", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column(
            "type", sa.Enum("COURSE", "ACTIVITY", native_enum=False), nullable=False
        ),
        sa.Column("department_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["department.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_component_id"), "component", ["id"], unique=False)
    op.create_index(
        op.f("ix_component_sigaa_id"), "component", ["sigaa_id"], unique=False
    )
    op.create_table(
        "program",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("sigaa_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column(
            "degree",
            sa.Enum("BACHELOR", "LICENTIATE", native_enum=False),
            nullable=False,
        ),
        sa.Column("shift", sa.Enum("DAY", "NIGHT", native_enum=False), nullable=False),
        sa.Column("department_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["department.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_program_id"), "program", ["id"], unique=False)
    op.create_index(op.f("ix_program_sigaa_id"), "program", ["sigaa_id"], unique=False)
    op.create_table(
        "corequisite",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("component_id", sa.Integer(), nullable=False),
        sa.Column("corequisite_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["component_id"],
            ["component.id"],
        ),
        sa.ForeignKeyConstraint(
            ["corequisite_id"],
            ["component.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_corequisite_id"), "corequisite", ["id"], unique=False)
    op.create_table(
        "curriculum",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("sigaa_id", sa.Integer(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("start_year", sa.Integer(), nullable=False),
        sa.Column("star_period", sa.Integer(), nullable=False),
        sa.Column("min_periods", sa.Integer(), nullable=False),
        sa.Column("max_periods", sa.Integer(), nullable=False),
        sa.Column("min_period_workload", sa.Integer(), nullable=False),
        sa.Column("max_period_workload", sa.Integer(), nullable=False),
        sa.Column("min_workload", sa.Integer(), nullable=False),
        sa.Column("mandatory_components_workload", sa.Integer(), nullable=False),
        sa.Column("min_elective_components_workload", sa.Integer(), nullable=False),
        sa.Column("max_elective_components_workload", sa.Integer(), nullable=False),
        sa.Column(
            "min_complementary_components_workload", sa.Integer(), nullable=False
        ),
        sa.Column(
            "max_complementary_components_workload", sa.Integer(), nullable=False
        ),
        sa.Column("program_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["program_id"],
            ["program.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_curriculum_id"), "curriculum", ["id"], unique=False)
    op.create_index(
        op.f("ix_curriculum_sigaa_id"), "curriculum", ["sigaa_id"], unique=False
    )
    op.create_table(
        "equivalence_option",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("component_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["component_id"],
            ["component.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_equivalence_option_id"), "equivalence_option", ["id"], unique=False
    )
    op.create_table(
        "prerequisite_option",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("component_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["component_id"],
            ["component.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_prerequisite_option_id"), "prerequisite_option", ["id"], unique=False
    )
    op.create_table(
        "curriculum_component",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "type", sa.Enum("MANDATORY", "ELECTIVE", native_enum=False), nullable=False
        ),
        sa.Column("percentage_prerequisite", sa.Integer(), nullable=False),
        sa.Column("curriculum_id", sa.Integer(), nullable=False),
        sa.Column("component_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["component_id"],
            ["component.id"],
        ),
        sa.ForeignKeyConstraint(
            ["curriculum_id"],
            ["curriculum.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_curriculum_component_id"), "curriculum_component", ["id"], unique=False
    )
    op.create_table(
        "equivalence_component",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("component_id", sa.Integer(), nullable=False),
        sa.Column("equivalence_option_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["component_id"],
            ["component.id"],
        ),
        sa.ForeignKeyConstraint(
            ["equivalence_option_id"],
            ["equivalence_option.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_equivalence_component_id"),
        "equivalence_component",
        ["id"],
        unique=False,
    )
    op.create_table(
        "prerequisite_component",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("component_id", sa.Integer(), nullable=False),
        sa.Column("prerequisite_option_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["component_id"],
            ["component.id"],
        ),
        sa.ForeignKeyConstraint(
            ["prerequisite_option_id"],
            ["prerequisite_option.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_prerequisite_component_id"),
        "prerequisite_component",
        ["id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_prerequisite_component_id"), table_name="prerequisite_component"
    )
    op.drop_table("prerequisite_component")
    op.drop_index(
        op.f("ix_equivalence_component_id"), table_name="equivalence_component"
    )
    op.drop_table("equivalence_component")
    op.drop_index(op.f("ix_curriculum_component_id"), table_name="curriculum_component")
    op.drop_table("curriculum_component")
    op.drop_index(op.f("ix_prerequisite_option_id"), table_name="prerequisite_option")
    op.drop_table("prerequisite_option")
    op.drop_index(op.f("ix_equivalence_option_id"), table_name="equivalence_option")
    op.drop_table("equivalence_option")
    op.drop_index(op.f("ix_curriculum_sigaa_id"), table_name="curriculum")
    op.drop_index(op.f("ix_curriculum_id"), table_name="curriculum")
    op.drop_table("curriculum")
    op.drop_index(op.f("ix_corequisite_id"), table_name="corequisite")
    op.drop_table("corequisite")
    op.drop_index(op.f("ix_program_sigaa_id"), table_name="program")
    op.drop_index(op.f("ix_program_id"), table_name="program")
    op.drop_table("program")
    op.drop_index(op.f("ix_component_sigaa_id"), table_name="component")
    op.drop_index(op.f("ix_component_id"), table_name="component")
    op.drop_table("component")
    op.drop_index(op.f("ix_department_sigaa_id"), table_name="department")
    op.drop_index(op.f("ix_department_id"), table_name="department")
    op.drop_table("department")
    # ### end Alembic commands ###
